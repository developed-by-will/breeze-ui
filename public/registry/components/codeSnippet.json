{
  "name": "codeSnippet",
  "type": "registry:ui",
  "dependencies": ["react-syntax-highlighter", "@types/react-syntax-highlighter"],
  "registryDependencies": ["alert-dialog", "button"],
  "files": [
    {
      "path": "ui/codeSnippet/index.tsx",
      "content": "import { Button } from '@/components/ui/button';\r\nimport { Check, Copy } from 'lucide-react';\r\nimport { useCallback, useState } from 'react';\r\nimport { Prism as SyntaxHighlighter } from 'react-syntax-highlighter';\r\nimport * as PrismStyles from 'react-syntax-highlighter/dist/esm/styles/prism';\r\n\r\nimport {\r\n  AlertDialog,\r\n  AlertDialogAction,\r\n  AlertDialogCancel,\r\n  AlertDialogContent,\r\n  AlertDialogDescription,\r\n  AlertDialogFooter,\r\n  AlertDialogHeader,\r\n  AlertDialogTitle,\r\n  AlertDialogTrigger\r\n} from '@/components/ui/alert-dialog';\r\n\r\ntype StyleName = keyof typeof PrismStyles;\r\n\r\ntype PropsType =\r\n  | {\r\n      codeSnippet: string;\r\n      styleName: StyleName;\r\n      showAlert?: false;\r\n    }\r\n  | {\r\n      codeSnippet: string;\r\n      styleName: StyleName;\r\n      showAlert: true;\r\n      alertTitle: string;\r\n      alertMessage: string;\r\n      alertDialogAction: string;\r\n    };\r\n\r\nconst CopyCode = ({ codeSnippet }: { codeSnippet: string }) => {\r\n  const [isCopied, setIsCopied] = useState(false);\r\n\r\n  const copyToClipboard = useCallback(() => {\r\n    navigator.clipboard.writeText(codeSnippet).then(() => {\r\n      setIsCopied(true);\r\n      setTimeout(() => setIsCopied(false), 2000);\r\n    });\r\n  }, [codeSnippet]);\r\n\r\n  return (\r\n    <Button\r\n      variant=\"ghost\"\r\n      size=\"icon\"\r\n      className=\"absolute top-2 right-2 z-10 bg-primary-foreground\"\r\n      onClick={copyToClipboard}\r\n    >\r\n      {isCopied ? <Check className=\"h-4 w-4\" /> : <Copy className=\"h-4 w-4\" />}\r\n    </Button>\r\n  );\r\n};\r\n\r\nconst ShowAlertDialog = (props: PropsType) => {\r\n  const { showAlert, codeSnippet } = props;\r\n\r\n  const copyToClipboard = useCallback(() => {\r\n    navigator.clipboard.writeText(codeSnippet).then(() => {\r\n      console.log('Close dialog');\r\n    });\r\n  }, [codeSnippet]);\r\n\r\n  if (!showAlert) return;\r\n\r\n  return (\r\n    <AlertDialog>\r\n      <AlertDialogTrigger asChild>\r\n        <Button\r\n          variant=\"ghost\"\r\n          size=\"icon\"\r\n          className=\"absolute top-2 right-2 z-10 bg-primary-foreground\"\r\n        >\r\n          <Copy className=\"h-4 w-4\" />\r\n        </Button>\r\n      </AlertDialogTrigger>\r\n      <AlertDialogContent>\r\n        <AlertDialogHeader>\r\n          <AlertDialogTitle className=\"text-primary\">{props.alertTitle}</AlertDialogTitle>\r\n          <AlertDialogDescription>{props.alertMessage}</AlertDialogDescription>\r\n        </AlertDialogHeader>\r\n        <AlertDialogFooter>\r\n          <AlertDialogCancel className=\"text-primary\">Cancel</AlertDialogCancel>\r\n          <AlertDialogAction onClick={copyToClipboard} className=\"text-secondary\">\r\n            {props.alertDialogAction}\r\n          </AlertDialogAction>\r\n        </AlertDialogFooter>\r\n      </AlertDialogContent>\r\n    </AlertDialog>\r\n  );\r\n};\r\n\r\nexport default function CodeSnippet(props: Readonly<PropsType>) {\r\n  const { codeSnippet, styleName, showAlert } = props;\r\n  const style = PrismStyles[styleName];\r\n\r\n  return (\r\n    <div className=\"relative\">\r\n      {showAlert ? (\r\n        <ShowAlertDialog\r\n          codeSnippet={codeSnippet}\r\n          styleName={styleName}\r\n          showAlert={showAlert}\r\n          alertTitle={props.alertTitle}\r\n          alertMessage={props.alertMessage}\r\n          alertDialogAction={props.alertDialogAction}\r\n        />\r\n      ) : (\r\n        <CopyCode codeSnippet={codeSnippet} />\r\n      )}\r\n\r\n      <SyntaxHighlighter\r\n        language=\"typescript\"\r\n        style={style}\r\n        wrapLongLines={true}\r\n        customStyle={{\r\n          margin: 0,\r\n          borderRadius: '0.375rem',\r\n          padding: '1rem',\r\n          minHeight: '55px'\r\n        }}\r\n      >\r\n        {codeSnippet}\r\n      </SyntaxHighlighter>\r\n    </div>\r\n  );\r\n}\r\n",
      "type": "registry:page",
      "target": "components/breeze-ui/codeSnippet.tsx"
    }
  ]
}
