{
  "name": "login-01",
  "type": "registry:block",
  "description": "Login 01",
  "dependencies": ["react-icons", "next-themes"],
  "registryDependencies": ["button", "card", "input", "label"],
  "files": [
    {
      "path": "block/login-01/page.tsx",
      "content": "'use client';\r\n\r\nimport LoginPage01 from './components/form';\r\n\r\nexport default function Login() {\r\n  async function signIn() {\r\n    alert('Sign in logic');\r\n  }\r\n\r\n  async function signInWithGoogle() {\r\n    alert('Sign in with Google logic');\r\n  }\r\n\r\n  return (\r\n    <LoginPage01\r\n      customBtnColor=\"bg:background\"\r\n      customLabel=\"Sign In\"\r\n      customIcon=\"\"\r\n      formWidth={300}\r\n      providers={['custom', 'google']}\r\n      handleLogin={[() => signIn(), () => signInWithGoogle()]}\r\n    />\r\n  );\r\n}\r\n",
      "type": "registry:page",
      "target": "app/login-01/page.tsx"
    },
    {
      "path": "block/login-01/components/form.tsx",
      "content": "'use client';\r\n\r\nimport { Button } from '@/components/ui/button';\r\nimport {\r\n  Card,\r\n  CardContent,\r\n  CardDescription,\r\n  CardFooter,\r\n  CardHeader,\r\n  CardTitle\r\n} from '@/components/ui/card';\r\nimport { Input } from '@/components/ui/input';\r\nimport { Label } from '@/components/ui/label';\r\nimport { useTheme } from 'next-themes';\r\nimport Image, { StaticImageData } from 'next/image';\r\nimport { ReactNode } from 'react';\r\nimport { IconType } from 'react-icons/lib';\r\nimport { providerDetails, ProvidersEnum } from './providerDetails';\r\n\r\n// Check if one of the providers is 'custom'\r\n// If it is then customLabel & customBtnColor are required\r\nexport type LoginPage01Type = {\r\n  backgroundImage?: string | StaticImageData;\r\n  companyLogo?: string | StaticImageData | JSX.Element;\r\n  companyLogoAlternative?: string | StaticImageData | JSX.Element;\r\n  title?: string | JSX.Element;\r\n  description?: string | JSX.Element;\r\n  providers: ProvidersEnum[];\r\n  handleLogin: Array<() => void>;\r\n  formWidth: number;\r\n} & {\r\n  providers: (ProvidersEnum | 'custom')[];\r\n  customLabel: string;\r\n  customBtnColor: string;\r\n  customIcon: IconType | string | JSX.Element;\r\n} & (\r\n    | { companyLogo: undefined; companyLogoAlt: undefined }\r\n    | {\r\n        companyLogo: string | StaticImageData | JSX.Element;\r\n        companyLogoAlt: string;\r\n        companyLogoAlternative: string | StaticImageData | JSX.Element;\r\n      }\r\n  );\r\n\r\nexport default function LoginPage01(props: Readonly<LoginPage01Type>) {\r\n  const {\r\n    backgroundImage,\r\n    companyLogo,\r\n    companyLogoAlternative,\r\n    title,\r\n    description,\r\n    providers = [],\r\n    handleLogin = [],\r\n    formWidth\r\n  } = props;\r\n\r\n  const { theme, systemTheme } = useTheme();\r\n\r\n  // Optional chaining ensures customLabel & customBtnColor are only accessed if defined\r\n  const customLabel = 'customLabel' in props ? props.customLabel : undefined;\r\n  const customBtnColor = 'customBtnColor' in props ? props.customBtnColor : undefined;\r\n  const companyLogoAlt = 'companyLogoAlt' in props ? props.companyLogoAlt : undefined;\r\n  const customIcon = 'customIcon' in props ? props.customIcon : undefined;\r\n\r\n  const currentTheme = theme === 'system' ? systemTheme : theme;\r\n  const logo = currentTheme === 'dark' ? companyLogoAlternative : companyLogo;\r\n\r\n  return (\r\n    <>\r\n      {backgroundImage && (\r\n        <Image\r\n          src={backgroundImage}\r\n          alt=\"Background image of a forest\"\r\n          className=\"absolute w-full h-full object-cover\"\r\n          quality={100}\r\n          priority\r\n          fill\r\n        />\r\n      )}\r\n\r\n      <div className=\"flex flex-col items-center justify-center h-screen\">\r\n        <Card\r\n          className={`flex flex-col items-center justify-center bg-secondary/90 shadow-2xl px-4 z-10 w-[${formWidth}px]`}\r\n        >\r\n          <CardHeader className=\"flex flex-col items-center\">\r\n            {logo && (typeof logo === 'string' || 'src' in logo) ? (\r\n              <Image\r\n                src={logo}\r\n                alt={companyLogoAlt ?? 'Company Logo'}\r\n                width={formWidth}\r\n                height={100}\r\n              />\r\n            ) : (\r\n              logo\r\n            )}\r\n            <CardTitle>{title && <h2>{title}</h2>}</CardTitle>\r\n            <CardDescription>\r\n              {description && <div className=\"text-colors-neutral-700\">{description}</div>}\r\n            </CardDescription>\r\n          </CardHeader>\r\n          <CardContent className=\"w-full\">\r\n            <div className=\"flex flex-col gap-3\">\r\n              <Label htmlFor=\"email\">Email</Label>\r\n              <Input id=\"email\" placeholder=\"Emaill address\" />\r\n              <Label htmlFor=\"password\">Password</Label>\r\n              <Input id=\"password\" type=\"password\" placeholder=\"********\" />\r\n            </div>\r\n          </CardContent>\r\n          <CardFooter className=\"flex flex-col gap-3 pb-14\">\r\n            {providers.map((provider, index) => {\r\n              const { label, icon, background } =\r\n                provider === 'custom'\r\n                  ? {\r\n                      label: customLabel!,\r\n                      icon: customIcon,\r\n                      background: customBtnColor!\r\n                    }\r\n                  : providerDetails[provider];\r\n              const handleClick = handleLogin[index];\r\n\r\n              return (\r\n                <Button\r\n                  key={provider}\r\n                  onClick={handleClick}\r\n                  className={`flex items-center w-full gap-2 hover:saturate-50 transition-all duration-300 ${background}`}\r\n                >\r\n                  {icon as ReactNode} {label}\r\n                </Button>\r\n              );\r\n            })}\r\n          </CardFooter>\r\n        </Card>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n",
      "type": "registry:component",
      "target": "app/login-01/components/form.tsx"
    },
    {
      "path": "block/login-01/components/providerDetails.tsx",
      "content": "import { BsDiscord, BsEnvelopeFill, BsFacebook, BsGithub, BsGoogle } from 'react-icons/bs';\r\n\r\n// List of providers\r\nexport type ProvidersEnum = 'google' | 'github' | 'discord' | 'facebook' | 'email' | 'custom';\r\n\r\n// Exclude 'custom' from the list because it is handled separately\r\nexport const providerDetails: Record<\r\n  Exclude<ProvidersEnum, 'custom'>,\r\n  { label: string; icon?: JSX.Element; background: string }\r\n> = {\r\n  google: {\r\n    label: 'Sign in with Google',\r\n    icon: <BsGoogle />,\r\n    background: 'bg-orange-600'\r\n  },\r\n  github: {\r\n    label: 'Sign in with GitHub',\r\n    icon: <BsGithub />,\r\n    background: 'bg-stone-600'\r\n  },\r\n  discord: {\r\n    label: 'Sign in with Discord',\r\n    icon: <BsDiscord />,\r\n    background: 'bg-indigo-600'\r\n  },\r\n  facebook: {\r\n    label: 'Sign in with Facebook',\r\n    icon: <BsFacebook />,\r\n    background: 'bg-blue-600'\r\n  },\r\n  email: {\r\n    label: 'Sign in with Email',\r\n    icon: <BsEnvelopeFill />,\r\n    background: 'bg-emerald-600'\r\n  }\r\n};\r\n",
      "type": "registry:component",
      "target": "app/login-01/components/providerDetails.tsx"
    }
  ]
}
